[extruder]
step_pin: can0: EXT_STEP
dir_pin: can0: EXT_DIR
enable_pin: !can0: EXT_EN
microsteps: 32
full_steps_per_rotation: 200
max_extrude_cross_section: 5
rotation_distance: 22.9546814
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: can0: HE0
pwm_cycle_time: 0.02
smooth_time: 0.5
max_power: 0.8
sensor_type: Generic 3950
sensor_pin: can0: TH0
control: pid
pid_Kp: 26.112
pid_Ki: 1.956
pid_Kd: 87.154
min_temp: 0
max_temp: 300
gear_ratio: 50:10
#instantaneous_corner_velocity: 1.5



## EXTRUDER MOTOR
[tmc2240 extruder]
cs_pin: can0: PA15
spi_software_sclk_pin: can0: ADXL_SCLK
spi_software_mosi_pin: can0: ADXL_MOSI
spi_software_miso_pin: can0: ADXL_MISO
spi_speed: 1000000
#spi_bus:
#   See the "common SPI settings" section for a description of the
#   above parameters.
#chain_position:
#chain_length:
#   These parameters configure an SPI daisy chain. The two parameters
#   define the stepper position in the chain and the total chain length.
#   Position 1 corresponds to the stepper that connects to the MOSI signal.
#   The default is to not use an SPI daisy chain.
interpolate: False
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). The default is True.
run_current: 0.8
#   The amount of current (in amps RMS) to configure the driver to use
#   during stepper movement. This parameter must be provided. motor rating not driver
#hold_current: 0.1
#   The amount of current (in amps RMS) to configure the driver to use
#   when the stepper is not moving. Setting a hold_current is not
#   recommended (see TMC_Drivers.md for details). The default is to
#   not reduce the current.
rref: 12000
#   The resistance (in ohms) of the resistor between IREF and GND. The
#   default is 12000.
stealthchop_threshold: 999999 #was 999999
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.
driver_IHOLDDELAY: 8 #This inserts a small delay before entering stationary hold mode.
driver_IRUNDELAY: 2 #This gives a slight ramp-up time when starting the motor.
#driver_TPOWERDOWN: 10
driver_TBL: 3
driver_TOFF: 4
driver_HEND: 3
driver_HSTRT: 4
#driver_FD3: 0
driver_TPFD: 0
#driver_CHM: 0
#driver_VHIGHFS: 0
#driver_VHIGHCHM: 0
##driver_DISS2G: 0
#driver_DISS2VS: 1
driver_PWM_AUTOSCALE: True # AutoTuning
driver_PWM_AUTOGRAD: True  #AutoTuning
#driver_PWM_FREQ: 2
#driver_FREEWHEEL: 0
driver_PWM_GRAD: 12 # This should be calculated for your particular motor, but this is a sensible default for most pancake extruder steppers.
driver_PWM_OFS: 36 #40 #This should be calculated for your particular motor, but this is a sensible default for most pancake extruder steppers.
driver_PWM_REG: 15 #This sets the autotuning rate to maximum.
driver_PWM_LIM: 12 #This sets the mode-switching current jerk compensation to minimum. This may not be strictly necessary.
driver_SGT: 35 #This may need adjusted for your particular setup, more on this later. This setting is the stallguard threshold, also used 
               #for sensorless homing, but on the TMC 2240 it also controls the sensitivity of the autotuning process
driver_SEMIN: 3 ###1
#driver_SEUP: 2  ##2
driver_SEMAX: 3 ###3
#driver_SEDN: 1
#driver_SEIMIN: 1  ###1
#driver_SFILT: 0 #1
#driver_SG4_ANGLE_OFFSET: 1
#   Set the given register during the configuration of the TMC2240
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.
diag0_pin: sb2040:PB3
#diag1_pin:
#   The micro-controller pin attached to one of the DIAG lines of the
#   TMC2240 chip. Only a single diag pin should be specified. The pin
#   is "active low" and is thus normally prefaced with "^!". Setting
#   this creates a "tmc2240_stepper_x:virtual_endstop" virtual pin
#   which may be used as the stepper's endstop_pin. Doing this enables
#   "sensorless homing". (Be sure to also set driver_SGT to an
#   appropriate sensitivity value.) The default is to not enable
#   sensorless homing.

[gcode_macro configure_extruder]
gcode:
  SET_TMC_FIELD STEPPER=extruder FIELD=IHOLD VALUE=0
  #Helps cool motor at idle
  SET_TMC_FIELD STEPPER=extruder FIELD=freewheel VALUE=1 
  # Enable accurate stall current measurement
  SET_TMC_FIELD STEPPER=extruder FIELD=pwm_meas_sd_enable VALUE=1
  SET_TMC_FIELD STEPPER=extruder FIELD=sg4_filt_en VALUE=1
  # Set the StealthChop stall detection threshold (may not be completely necessary)
  SET_TMC_FIELD STEPPER=extruder FIELD=SG4_THRS VALUE=10 #180
  # Set the max expected velocity to a value such that we are unlikely to switch to fullstepping except during a very fast retraction or prime
  SET_TMC_FIELD STEPPER=extruder FIELD=THIGH VELOCITY=50
  # Never use CoolStep, this is an extruder, we will never be moving fast enough for it to work
  SET_TMC_FIELD STEPPER=extruder FIELD=TCOOLTHRS VALUE=4000
  # But do switch to PWM autotuning when at high flow
  SET_TMC_FIELD STEPPER=extruder FIELD=TPWMTHRS VELOCITY=1
  # Set the temperature prewarning to something reasonable. Cosmetic, Klipper does nothing with this
  SET_TMC_FIELD STEPPER=extruder FIELD=OVERTEMPPREWARNING_VTH VALUE=2885 # 7.7 * 100 C + 2038
  # The following is absolutely critical: set the overvoltage snubber to a sensible voltage.
  # This should be set to about 0.8 V above your power supply's idle voltage.
  # Your PSU voltage can be read from the TMC 2240 by issuing a GCODE command:
  # DUMP_TMC stepper=extruder register=ADC_VSUPPLY_AIN
  # The voltage is the value of adc_vsupply divided by 0.00732
  {% set v = (25.23/0.009732)|int %}
  SET_TMC_FIELD STEPPER=extruder FIELD=OVERVOLTAGE_VTH VALUE={ v }


#So, time for some notes as to how that 2240 config works. Turns out that the 2240 is quite different in its behaviour: you want stealthchop on, because it allows for the driver to auto-tune itself to the motor, and that tuning is needed so the charge pump doesn't get overwhelmed and cause the undervoltage error. But autotuning for a 36 mm stepper needs different starting values than for a NEMA 17, and the defaults look like they were set for the latter. The chip is quite neat, it will actually tell you exactly what it is doing if you do a dump_tmc stepper=extruder, and it shows the measured supply voltage, temperature, and its estimates of what the load on the motor is (based on the same method as sensorless homing). The datasheet has some formulas for calculating good starting points for a particular motor, so I did the math for the LDO-36STH20-1004AGH I'm using (common motor), and tweaked the measurement sensitivity down a bit till it tuned OK. The other thing I did that matters was SET_TMC_FIELD STEPPER=extruder FIELD=OVERVOLTAGE_VTH VALUE=2497        # 24.3 V / 0.009732 V, which enables the back-emf snubbing circuit at 24.3 V. That limits how high the back-emf can push the supply voltage, which is the other end of the 'undervolt' measurement. And, driver_TPFD: 0 just like BTT suggested, which reduces the time window when the motor can feed back into the supply to the minimum possible. Also, the  SET_TMC_FIELD STEPPER=extruder FIELD=THIGH VALUE=1048575 and SET_TMC_FIELD STEPPER=extruder FIELD=TCOOLTHRS  VALUE=1048575 disable Coolstep because that doesn't work at low RPM... and being an extruder, we're never going to be going fast enough. 
